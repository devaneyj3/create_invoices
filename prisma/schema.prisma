// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

  model Account {
      id                 String  @id @default(cuid())
      userId             String
      type               String
      provider           String
      providerAccountId  String
      refresh_token      String? @db.Text
      access_token       String? @db.Text
      expires_at         Int?
      token_type         String?
      scope              String?
      id_token           String? @db.Text
      session_state      String?
      oauth_token_secret String?
      oauth_token        String?

      user User @relation(fields: [userId], references: [id], onDelete: Cascade)

      @@unique([provider, providerAccountId])
    }

    model Session {
      id           String   @id @default(cuid())
      sessionToken String   @unique
      userId       String
      expires      DateTime
      user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    }
    model Company {
      id          String   @id @default(cuid())
      companyName String  @unique
      companyAddress String
      companyCity String
      companyState String
      companyZip String
      userId      String
      user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    }

    model User {
      id            String    @id @default(cuid())
      name          String?
      jobTitle      String?
      address       String?
      city          String?
      state         String?
      zip           String?
      email         String?   @unique
      phone         String?
      emailVerified DateTime?
      image         String?
      accounts      Account[]
      sessions      Session[]
      companies     Company[]
    }

    model VerificationToken {
      identifier String
      token      String   @unique
      expires    DateTime

      @@unique([identifier, token])
    }
